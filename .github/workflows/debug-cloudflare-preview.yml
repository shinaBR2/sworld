name: Debug Cloudflare Deployment

on:
  issue_comment:
    types: [created, edited]

jobs:
  detect-cloudflare-deployment:
    # Only run on PR comments, not issue comments
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest

    outputs:
      preview_url: ${{ steps.extract-url.outputs.preview_url }}
      branch_preview_url: ${{ steps.extract-url.outputs.branch_preview_url }}
      app_name: ${{ steps.detect-app.outputs.app_name }}
      should_run_tests: ${{ steps.detect-app.outputs.should_run_tests }}

    steps:
      - name: Check if comment is from Cloudflare Pages
        id: check-comment
        run: |
          COMMENT="${{ github.event.comment.body }}"
          if [[ "$COMMENT" == *"Deploying"*"Cloudflare Pages"* && "$COMMENT" == *"Preview URL"* ]]; then
            echo "is_cloudflare_comment=true" >> $GITHUB_OUTPUT
          else
            echo "is_cloudflare_comment=false" >> $GITHUB_OUTPUT
          fi

      - name: Extract Preview URLs
        id: extract-url
        if: steps.check-comment.outputs.is_cloudflare_comment == 'true'
        run: |
          COMMENT="${{ github.event.comment.body }}"

          # Extract the regular preview URL
          PREVIEW_URL=$(echo "$COMMENT" | grep -o 'https://[a-zA-Z0-9-]*\.sworld[a-zA-Z0-9-]*\.pages\.dev' | head -1)
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

          # Extract the branch preview URL if available
          BRANCH_PREVIEW_URL=$(echo "$COMMENT" | grep -o 'https://[a-zA-Z0-9-]*\.sworld[a-zA-Z0-9-]*\.pages\.dev' | tail -1)
          echo "branch_preview_url=$BRANCH_PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Detect which app was deployed
        id: detect-app
        if: steps.check-comment.outputs.is_cloudflare_comment == 'true'
        run: |
          COMMENT="${{ github.event.comment.body }}"

          # Detect which app was deployed
          if [[ "$COMMENT" == *"Deploying listen"* ]]; then
            echo "app_name=listen" >> $GITHUB_OUTPUT
            echo "should_run_tests=true" >> $GITHUB_OUTPUT
          elif [[ "$COMMENT" == *"Deploying watch"* ]]; then
            echo "app_name=watch" >> $GITHUB_OUTPUT
            echo "should_run_tests=true" >> $GITHUB_OUTPUT
          else
            # For other apps that might not have e2e tests
            echo "app_name=unknown" >> $GITHUB_OUTPUT
            echo "should_run_tests=false" >> $GITHUB_OUTPUT
          fi

          echo "Detected app: $(cat $GITHUB_OUTPUT | grep app_name)"
