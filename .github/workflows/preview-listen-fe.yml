# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy Listen Preview Channels
'on':
  pull_request:
    paths:
      - 'apps/listen/**'
      - 'packages/core/**'
      - 'packages/ui/**'
      - '.github/workflows/preview-listen-fe.yml'

jobs:
  dev_deploy:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Copy .firebaserc file
        run: cp .firebaserc apps/listen/.firebaserc
      - name: Copy firebase.json file
        run: cp firebase.json apps/listen/firebase.json
      - name: Build
        run: pnpm build --filter=listen
        env:
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VITE_PROJECT_ID: ${{ secrets.VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.VITE_STORAGE_BUCKET }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.VITE_MESSAGING_SENDER_ID }}
          VITE_APP_ID: ${{ secrets.VITE_APP_ID }}
          VITE_MEASUREMENT_ID: ${{ secrets.VITE_MEASUREMENT_ID }}
          VITE_AUTH0_DOMAIN: ${{ secrets.VITE_AUTH0_DOMAIN }}
          VITE_AUTH0_CLIENT_ID: ${{ secrets.VITE_AUTH0_CLIENT_ID }}
          VITE_HASURA_DOMAIN: ${{ vars.VITE_HASURA_DOMAIN }}
          VITE_MAIN_SITE_URL: ${{ vars.VITE_MAIN_SITE_URL }}
          VITE_LISTEN_SITE_URL: ${{ vars.VITE_LISTEN_SITE_URL }}
          VITE_WATCH_SITE_URL: ${{ vars.VITE_WATCH_SITE_URL }}
          VITE_PLAY_SITE_URL: ${{ vars.VITE_PLAY_SITE_URL }}
      - name: Deploy listen
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@0f248036885ae672f78587669fa2923f0ef6cac2
        with:
          target: 'listen'
          entryPoint: 'apps/listen'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MY_WORLD_DEV }}'
          projectId: ${{ secrets.VITE_PROJECT_ID }}
      - name: Debug Firebase Deploy Outputs
        run: |
          echo "Deploy Action Outputs:"
          echo "details_url: ${{ steps.deploy.outputs.details_url }}"
          echo "hosting_url: ${{ steps.deploy.outputs.hosting_url }}"
          echo "All outputs: ${{ toJSON(steps.deploy.outputs) }}"
      - name: Verify preview URL
        run: |
          if [ -z "${{ steps.deploy.outputs.details_url }}" ]; then
            echo "Error: Firebase preview URL is empty or undefined"
            exit 1
          fi
          if [[ ! "${{ steps.deploy.outputs.details_url }}" =~ ^https?:// ]]; then
            echo "Error: Invalid preview URL format"
            exit 1
          fi
      - name: Run Playwright Tests
        working-directory: apps/listen
        if: success()
        run: |
          pnpm exec playwright install --with-deps
          pnpm run e2e
        env:
          PLAYWRIGHT_LISTEN_URL: ${{ steps.deploy.outputs.details_url }}

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: apps/listen/playwright-report/
          retention-days: 30

  prod_deploy:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Copy .firebaserc file
        run: cp .firebaserc apps/listen/.firebaserc
      - name: Copy firebase.json file
        run: cp firebase.json apps/listen/firebase.json
      - name: Build
        run: pnpm build --filter=listen
        env:
          VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
          VITE_PROJECT_ID: ${{ secrets.VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET: ${{ secrets.VITE_STORAGE_BUCKET }}
          VITE_MESSAGING_SENDER_ID: ${{ secrets.VITE_MESSAGING_SENDER_ID }}
          VITE_APP_ID: ${{ secrets.VITE_APP_ID }}
          VITE_MEASUREMENT_ID: ${{ secrets.VITE_MEASUREMENT_ID }}
          VITE_AUTH0_DOMAIN: ${{ secrets.VITE_AUTH0_DOMAIN }}
          VITE_AUTH0_CLIENT_ID: ${{ secrets.VITE_AUTH0_CLIENT_ID }}
          VITE_HASURA_DOMAIN: ${{ vars.VITE_HASURA_DOMAIN }}
          VITE_MAIN_SITE_URL: ${{ vars.VITE_MAIN_SITE_URL }}
          VITE_LISTEN_SITE_URL: ${{ vars.VITE_LISTEN_SITE_URL }}
          VITE_WATCH_SITE_URL: ${{ vars.VITE_WATCH_SITE_URL }}
          VITE_PLAY_SITE_URL: ${{ vars.VITE_PLAY_SITE_URL }}
      - name: Deploy listen
        uses: FirebaseExtended/action-hosting-deploy@0f248036885ae672f78587669fa2923f0ef6cac2
        with:
          target: 'listen'
          entryPoint: 'apps/listen'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SWORLD_PROD }}'
          projectId: ${{ secrets.VITE_PROJECT_ID }}
